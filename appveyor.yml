branches:
 only:
   - master
   - develop

environment:
  matrix:
    # - PYTHON: "C:\\Python27-x64"
    #   PYTHON_VERSION: "2.7"
    #   PYTHON_ARCH: "64"
    #   TOXENV: "py27"

    - PYTHON: "C:\\Python34-x64"
      PYTHON_VERSION: "3.4"
      PYTHON_ARCH: "64"
      TOXENV: "py34"

    - PYTHON: "C:\\Python35-x64"
      PYTHON_VERSION: "3.5"
      PYTHON_ARCH: "64"
      TOXENV: "py35"

    - PYTHON: "C:\\Python36-x64"
      PYTHON_VERSION: "3.6"
      PYTHON_ARCH: "64"
      TOXENV: "py36"

matrix:
  fast_finish: true

clone_depth: 2

# password:
    # secure: COPY PASTE FROM APPVEYORS ONLINE ENCRYPTION TOOL

init:
  - "ECHO %PYTHON% %PYTHON_VERSION% %PYTHON_ARCH%bit"
  - set PATH=%PYTHON%;%PYTHON%\Scripts;%PATH%
  - "git config --system http.sslcainfo \"C:\\Program Files\\Git\\mingw64\\ssl\\certs\\ca-bundle.crt\""
  - "%PYTHON%/python -V"
  - "%PYTHON%/python -c \"import struct;print(8 * struct.calcsize(\'P\'))\""

install:
  - "%PYTHON%/Scripts/easy_install -U pip"
  - "%PYTHON%/Scripts/pip install -U setuptools wheel tox twine"

build: false

test_script:
  - "%PYTHON%/Scripts/tox -e %TOXENV%"

after_test:
  - "%PYTHON%/python setup.py bdist_wheel"
  - ps: "ls dist"

artifacts:
  - path: dist\*

deploy_script:
  - "echo [pypi] > %USERPROFILE%\\.pypirc"
  - "echo username: dmccloskey >> %USERPROFILE%\\.pypirc"
  - "echo password: %password% >> %USERPROFILE%\\.pypirc"
  - ps: >-
      if($env:appveyor_repo_tag -eq 'True') {
        if($env:appveyor_repo_branch -eq 'master') {
          Invoke-Expression "$env:PYTHON/Scripts/twine upload --skip-existing dist/*"
        }
      }
