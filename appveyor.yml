branches:
 only:
   - master
   - develop

environment:
  global:
      DEPS: "numpy=1.10 Cython"
      CONDA_VENV: "testy"
      # SDK v7.0 MSVC Express 2008's SetEnv.cmd script will fail if the
      # /E:ON and /V:ON options are not enabled in the batch script intepreter
      # See: http://stackoverflow.com/a/13751649/163740
      CMD_IN_ENV: "cmd /E:ON /V:ON /C .\\ci\\appveyor\\windows_sdk.cmd"
      TEST_CMD: 'python -c "import numpy as np;print(np.version.version)"'

  matrix:
    ## No CONDA
    # - PYTHON: "C:\\Python27-x64"
    #   PYTHON_VERSION: "2.7"
    #   PYTHON_ARCH: "64"
    #   TOXENV: "py27"

    # - PYTHON: "C:\\Python34-x64"
    #   PYTHON_VERSION: "3.4"
    #   PYTHON_ARCH: "64"
    #   TOXENV: "py34"

    # - PYTHON: "C:\\Python35-x64"
    #   PYTHON_VERSION: "3.5"
    #   PYTHON_ARCH: "64"
    #   TOXENV: "py35"

    # - PYTHON: "C:\\Python36-x64"
    #   PYTHON_VERSION: "3.6"
    #   PYTHON_ARCH: "64"
    #   TOXENV: "py36"

    ## CONDA
    # - PYTHON_VERSION: "2.7"
    #   PYTHON_ARCH: "32"
    #   platform: x86
    #   CONDA_HOME: "C:\\Miniconda"

    # - PYTHON_VERSION: "2.7"
    #   PYTHON_ARCH: "64"
    #   platform: x64
    #   CONDA_HOME: "C:\\Miniconda"

    - PYTHON_VERSION: "3.4"
      PYTHON_ARCH: "32"
      platform: x86
      CONDA_HOME: "C:\\Miniconda3"

    - PYTHON_VERSION: "3.4"
      PYTHON_ARCH: "64"
      platform: x64
      CONDA_HOME: "C:\\Miniconda3"

    - PYTHON_VERSION: "3.5"
      PYTHON_ARCH: "32"
      platform: x86
      CONDA_HOME: "C:\\Miniconda3"

    - PYTHON_VERSION: "3.5"
      PYTHON_ARCH: "64"
      platform: x64
      CONDA_HOME: "C:\\Miniconda3"

    - PYTHON_VERSION: "3.6"
      PYTHON_ARCH: "32"
      platform: x86
      CONDA_HOME: "C:\\Miniconda3"

    - PYTHON_VERSION: "3.6"
      PYTHON_ARCH: "64"
      platform: x64
      CONDA_HOME: "C:\\Miniconda3"

matrix:
  fast_finish: true

clone_depth: 2

# password:
    # secure: COPY PASTE FROM APPVEYORS ONLINE ENCRYPTION TOOL

init:
  ## no Conda
  # - "ECHO %PYTHON% %PYTHON_VERSION% %PYTHON_ARCH%bit"
  # - set PATH=%PYTHON%;%PYTHON%\Scripts;%PATH%
  # - "git config --system http.sslcainfo \"C:\\Program Files\\Git\\mingw64\\ssl\\certs\\ca-bundle.crt\""
  # - "%PYTHON%/python -V"
  # - "%PYTHON%/python -c \"import struct;print(8 * struct.calcsize(\'P\'))\""
  ## Conda
  - "SET PATH=%CONDA_HOME%;%CONDA_HOME%\\Scripts;%PATH%"
  # configures the Miniconda environment (Py2/Py3, 32/64 bit)
  - ps: python -u ci\appveyor\conda_setup.py

install:
  - "%PYTHON%/Scripts/easy_install -U pip"
  - "%PYTHON%/Scripts/pip install -U setuptools wheel tox twine"

build: false

test_script:
  ## No CONDA
  # - "%PYTHON%/Scripts/tox -e %TOXENV%"
  ## CONDA
  - "activate %CONDA_VENV%"
  - "%CMD_IN_ENV% %TEST_CMD%"

after_test:
  - "%PYTHON%/python setup.py bdist_wheel"
  - ps: "ls dist"

artifacts:
  - path: dist\*

deploy_script:
  - "echo [pypi] > %USERPROFILE%\\.pypirc"
  - "echo username: dmccloskey >> %USERPROFILE%\\.pypirc"
  - "echo password: %password% >> %USERPROFILE%\\.pypirc"
  - ps: >-
      if($env:appveyor_repo_tag -eq 'True') {
        if($env:appveyor_repo_branch -eq 'master') {
          Invoke-Expression "$env:PYTHON/Scripts/twine upload --skip-existing dist/*"
        }
      }
