formation energies for dnxps and nxps other than amp, adp, and atp from reactant contribution method are bad
use formation enerigeis from group contribution method instead

current concentration coverage = 93
previous concentration coverage = 76

>>> import csv,json
>>> io = base_importData()
>>> io.read_csv('data\\aerobicAnaerobic01_oxic.csv')
>>> io_out = base_exportData(io.data)
>>> io_out.write_dict2json('data\\aerobicAnaerobic01_oxic.json')
>>> io.clear_data()
>>> io.read_csv('data\\aerobicAnaerobic01_anoxic.csv')
>>> io_out = base_exportData(io.data)
>>> io_out.write_dict2json('data\\aerobicAnaerobic01_anoxic.json')

>>> data = json.load(open('data\\aerobicAnaerobic01_oxic.json'))
>>> data_O = {};
>>> for d in data: data_O[d['met_id']] = {'concentration':float(d['concentration']),'concentration_var':float(d['concentration_var']),'concentration_units':d['concentration_units'],'concentration_lb':float(d['concentration_lb']),'concentration_ub':float(d['concentration_ub'])}
>>> with open('data\\aerobicAnaerobic01_oxic.json', 'w') as outfile:
...     json.dump(data_O,outfile,indent=4)
>>> with open('data\\aerobicAnaerobic01_oxic.json', 'w') as outfile:
...     json.dump(data_O,outfile,indent=4)
>>> data = json.load(open('data\\aerobicAnaerobic01_anoxic.json'))
>>> data_O = {};
>>> for d in data:
...     data_O[d['met_id']] = {'concentration':float(d['concentration']),'concentration_var':float(d['concentration_var']),'concentration_units':d['concentration_units'],'concentration_lb':float(d['concentration_lb']),'concentration_ub':float(d['concentration_ub'])}
>>> with open('data\\aerobicAnaerobic01_anoxic.json', 'w') as outfile:
...     json.dump(data_O,outfile,indent=4)

>>> io = base_importData()
>>> io.read_csv('data\\aerobicAnaerobic01_dG_f01.csv')
>>> data_O = {};
>>> for d in io.data: data_O[d['met_id']] = {'dG_f':float(d['dG_f']),'dG_f_var':float(d['dG_f_var']),'dG_f_units':d['dG_f_units'],'dG_f_lb':float(d['dG_f']),'dG_f_ub':float(d['dG_f']),'met_name':d['met_name'],'KEGGID':d['KEGGID']}
... 
>>> io_out = base_exportData(data_O)
>>> io_out.write_dict2json('data\\aerobicAnaerobic01_dG_f01.json')

>>> tcc_oxic.dG0_r['PGCD']
>>> tcc_oxic.dG0_r['ACACT1r']
>>> tcc_anoxic.dG0_r['PGCD']
>>> tcc_anoxic.dG0_r['ACACT1r']
>>> tcc_anoxic.dG0_r['NDPK2']
>>> tcc_oxic.dG_r['PGCD']
>>> tcc_oxic.dG_r['ACACT1r']
>>> tcc_anoxic.dG_r['PGCD']
>>> tcc_anoxic.dG_r['ACACT1r']
>>> tcc_anoxic.dG_r['NDPK2']

>>> io = base_importData()
>>> io.read_csv('data\\aerobicAnaerobic01_fva_oxic.csv')
>>> data_O = {};
>>> for d in io.data: data_O[d['reaction_id']] = {'minimum':float(d['minimum']),'maximum':float(d['maximum'])}
>>> io_out = base_exportData(data_O)
>>> io_out.write_dict2json('data\\aerobicAnaerobic01_fva_oxic.json')


>>> io = base_importData()
>>> io.read_csv('data\\aerobicAnaerobic01_srd_anoxic.csv')
>>> data_O = {};
>>> for d in io.data: data_O[d['reaction_id']] = {'gr':float(d['gr']),'gr_ratio':float(d['gr_ratio'])}
>>> io_out = base_exportData(data_O)
>>> io_out.write_dict2json('data\\aerobicAnaerobic01_srd_anoxic.json')